/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-05 01:07:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import shop.UtilMgr;
import shop.ProductBean;
import java.util.Enumeration;
import shop.OrderBean;
import java.util.Hashtable;

public final class CartList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/shop/Bottom.jsp", Long.valueOf(1512098020402L));
    _jspx_dependants.put("/shop/Top.jsp", Long.valueOf(1512092326163L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("shop.OrderBean");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("shop.UtilMgr");
    _jspx_imports_classes.add("shop.ProductBean");
    _jspx_imports_classes.add("java.util.Hashtable");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("EUC-KR");
      out.write('\r');
      out.write('\n');
      shop.CartMgr cartMgr = null;
      synchronized (session) {
        cartMgr = (shop.CartMgr) _jspx_page_context.getAttribute("cartMgr", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (cartMgr == null){
          cartMgr = new shop.CartMgr();
          _jspx_page_context.setAttribute("cartMgr", cartMgr, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      shop.ProductMgr proMgr = null;
      proMgr = (shop.ProductMgr) _jspx_page_context.getAttribute("proMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (proMgr == null){
        proMgr = new shop.ProductMgr();
        _jspx_page_context.setAttribute("proMgr", proMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
 
		if(session.getAttribute("idKey")==null){
			response.sendRedirect("Login.jsp");
		}

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Simple Shopping Mall</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"script.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#996600\" topmargin=\"100\">\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	String id = (String)session.getAttribute("idKey");
	
	String log="";
	if(id == null) log ="<a href=Login.jsp>로그인</a>";
	else log = "<a href=Logout.jsp>로그아웃</a>";

	String reg="";
	if(id == null) reg ="<a href=Register.jsp>회원가입</a>";
	else reg = "<a href=ResiterUpdate.jsp>회원수정</a>";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<table width=\"75%\" align=\"center\" bgcolor=\"#FFFF99\">\r\n");
      out.write("  <tr  align=\"center\" bgcolor=\"#FFCC00\"> \r\n");
      out.write("    <td><b>");
      out.print(log);
      out.write("</b></td>\r\n");
      out.write("    <td><b>");
      out.print(reg);
      out.write("</b></td>\r\n");
      out.write("    <td><b><a href=\"ProductList.jsp\">상품목록</a></b></td>\r\n");
      out.write("    <td><b><a href=\"CartList.jsp\">장바구니</a></b></td>\r\n");
      out.write("    <td><b><a href=\"OrderList.jsp\">구매목록</a></b></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\t<table width=\"75%\" align=\"center\" bgcolor=\"#FFFF99\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td align=\"center\" bgcolor=\"#FFFFCC\">\r\n");
      out.write("\t\t<table width=\"95%\" align=\"center\" bgcolor=\"#FFFF99\" border=\"1\">\r\n");
      out.write("\t\t\t<tr align=\"center\" bgcolor=\"#996600\">\r\n");
      out.write("\t\t\t\t<td><font color=\"#FFFFFF\">제품</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"#FFFFFF\">수량</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"#FFFFFF\">가격</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"#FFFFFF\">수정/삭제</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"#FFFFFF\">조회</font></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

					int totalPrice = 0;
					Hashtable<Integer, OrderBean> hCart = 
							cartMgr.getCartList();
					if(hCart.isEmpty()){
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"5\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t장바구니는 비어 있습니다.\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
			
					}else{
						Enumeration<Integer> hCartKey = hCart.keys();
						while(hCartKey.hasMoreElements()){
							OrderBean order = 
									hCart.get(hCartKey.nextElement());
							ProductBean pbean = 
									proMgr.getProduct(order.getProductNo());
							int productNo = pbean.getNo();
							int price = pbean.getPrice();//상품가격
							int quantity = order.getQuantity();//주문수량
							int subTotal = price*quantity;//상춤총액
							totalPrice+=subTotal;//주문전체총액
							String pName = pbean.getName();//상품이름
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<form method=\"post\"action=\"CartProc.jsp\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"productNo\" value=\"");
      out.print(productNo);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"flag\">\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\"> \r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(pName);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input  name=quantity value=\"");
      out.print(quantity);
      out.write("\" size=\"5\">개</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(UtilMgr.intFormat(subTotal));
      out.write("원</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"수정\" size=\"3\" onclick=\"javascript:cartUpdate(this.form)\"> /\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"삭제\" size=\"3\" onclick=\"javascript:cartDelete(this.form)\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"javascript:productDetail('");
      out.print(productNo);
      out.write("')\">상세보기</a></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</form>\t\r\n");
      out.write("\t\t\t\t");
}//while
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t총 금액 : ");
      out.print(UtilMgr.intFormat(totalPrice));
      out.write("원\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"OrderProc.jsp\">주문하기</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t");
}//if-else
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<table width=\"75%\" align=\"center\" bgcolor=\"#FFFF99\">\r\n");
      out.write("  <tr bgcolor=\"#FFCC00\">\r\n");
      out.write("  <td align=\"center\" width=\"90%\">\r\n");
      out.write("  <b>Simple Shopping Mall 에 오신 것을 환영합니다. </b>\r\n");
      out.write("  </td>\r\n");
      out.write("  <td align=\"center\">\r\n");
      out.write("  \t<a href=\"admin/Index.jsp\"><b>관리자</b></a></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>");
      out.write("\r\n");
      out.write("\t<form name=\"detail\" method=\"post\" action=\"ProductDetail.jsp\" >\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"no\">\r\n");
      out.write("\t</form>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
